services:

  sonic-server-eureka:
    image: 'sonicorg/sonic-server-eureka:{{ SONIC_TAG }}'
    hostname: sonic-server-eureka
    environment:
      - SONIC_EUREKA_USERNAME={{ SONIC_EUREKA_USERNAME }}
      - SONIC_EUREKA_PASSWORD={{ SONIC_EUREKA_PASSWORD }}
      - SONIC_EUREKA_PORT={{ SONIC_EUREKA_PORT }}
      - SONIC_EUREKA_HOST=sonic-server-eureka
    volumes:
      - '{{ mkdir(APP_PATH/"logs") | chown }}:/logs/'
    networks:
      - sonic

  sonic-server-gateway:
    image: 'sonicorg/sonic-server-gateway:{{ SONIC_TAG }}'
    hostname: sonic-server-gateway
    environment:
      - SONIC_EUREKA_USERNAME={{ SONIC_EUREKA_USERNAME }}
      - SONIC_EUREKA_PASSWORD={{ SONIC_EUREKA_PASSWORD }}
      - SONIC_EUREKA_PORT={{ SONIC_EUREKA_PORT }}
      - SONIC_EUREKA_HOST=sonic-server-eureka
      - SECRET_KEY={{ SONIC_SECRET_KEY }}
      - EXPIRE_DAY={{ SONIC_EXPIRE_DAY }}
    volumes:
      - '{{ mkdir(APP_PATH/"logs") | chown }}:/logs/'
    depends_on:
      - sonic-server-eureka
    networks:
      - sonic

# {% if SONIC_MYSQL_HOST == "sonic-server-mysql" %}
  sonic-server-mysql:
    image: mysql
    user: '{{ DOCKER_UID }}:{{ DOCKER_GID }}'
    environment:
      - MYSQL_ROOT_PASSWORD={{ SONIC_MYSQL_ROOT_PASSWORD }}
      - MYSQL_DATABASE={{ SONIC_MYSQL_DATABASE }}
      - MYSQL_USER={{ SONIC_MYSQL_USERNAME }}
      - MYSQL_PASSWORD={{ SONIC_MYSQL_PASSWORD }}
    networks:
      - sonic
    volumes:
      - '{{ mkdir(APP_PATH/"mysql"/"conf.d") | chown(docker_user) }}:/etc/mysql/conf.d'
      - '{{ mkdir(APP_PATH/"mysql"/"data") | chown(docker_user) }}:/var/lib/mysql'
# {% endif %}

  sonic-server-controller:
    image: 'sonicorg/sonic-server-controller:{{ SONIC_TAG }}'
    environment:
      - SONIC_EUREKA_USERNAME={{ SONIC_EUREKA_USERNAME }}
      - SONIC_EUREKA_PASSWORD={{ SONIC_EUREKA_PASSWORD }}
      - SONIC_EUREKA_PORT={{ SONIC_EUREKA_PORT }}
      - SONIC_EUREKA_HOST=sonic-server-eureka
      - MYSQL_HOST={{ SONIC_MYSQL_HOST }}
      - MYSQL_PORT={{ SONIC_MYSQL_PORT }}
      - MYSQL_DATABASE={{ SONIC_MYSQL_DATABASE }}
      - MYSQL_USERNAME={{ SONIC_MYSQL_USERNAME }}
      - MYSQL_PASSWORD={{ SONIC_MYSQL_PASSWORD }}
      - SONIC_SERVER_HOST={{ SONIC_SERVER_HOST }}
      - SONIC_SERVER_PORT={{ SONIC_SERVER_PORT }}
      - SECRET_KEY={{ SONIC_SECRET_KEY }}
      - EXPIRE_DAY={{ SONIC_EXPIRE_DAY }}
      - REGISTER_ENABLE={{ SONIC_REGISTER_ENABLE }}
      - NORMAL_USER_ENABLE={{ SONIC_NORMAL_USER_ENABLE }}
      - LDAP_USER_ENABLE={{ SONIC_LDAP_USER_ENABLE }}
      - LDAP_USER_ID={{ SONIC_LDAP_USER_ID }}
      - LDAP_BASE_DN={{ SONIC_LDAP_BASE_DN }}
      - LDAP_BASE={{ SONIC_LDAP_BASE }}
      - LDAP_USERNAME={{ SONIC_LDAP_USERNAME }}
      - LDAP_PASSWORD={{ SONIC_LDAP_PASSWORD }}
      - LDAP_URL={{ SONIC_LDAP_URL }}
    networks:
      - sonic
    volumes:
      - '{{ mkdir(APP_PATH/"logs") | chown(docker_user) }}:/logs/'
    depends_on:
      - sonic-server-eureka
#     {% if SONIC_MYSQL_HOST == "sonic-server-mysql" %}
      - sonic-server-mysql
#     {% endif %}
    restart: unless-stopped

  sonic-server-folder:
    image: 'sonicorg/sonic-server-folder:{{ SONIC_TAG }}'
    container_name: sonic-server-folder
    environment:
      - SONIC_EUREKA_USERNAME={{ SONIC_EUREKA_USERNAME }}
      - SONIC_EUREKA_PASSWORD={{ SONIC_EUREKA_PASSWORD }}
      - SONIC_EUREKA_HOST=sonic-server-eureka
      - SONIC_EUREKA_PORT={{ SONIC_EUREKA_PORT }}
      - SONIC_SERVER_HOST={{ SONIC_SERVER_HOST }}
      - SONIC_SERVER_PORT={{ SONIC_SERVER_PORT }}
      - SECRET_KEY={{ SONIC_SECRET_KEY }}
      - EXPIRE_DAY={{ SONIC_EXPIRE_DAY }}
    networks:
      - sonic
    volumes:
      - '{{ mkdir(APP_PATH/"keepFiles") | chown }}:/keepFiles/'
      - '{{ mkdir(APP_PATH/"imageFiles") | chown }}:/imageFiles/'
      - '{{ mkdir(APP_PATH/"recordFiles") | chown }}:/recordFiles/'
      - '{{ mkdir(APP_PATH/"packageFiles") | chown }}:/packageFiles/'
      - '{{ mkdir(APP_PATH/"logs") | chown }}:/logs/'
    depends_on:
      - sonic-server-eureka
    restart: unless-stopped

  sonic-client-web:
    image: 'sonicorg/sonic-client-web:{{ SONIC_TAG }}'
    container_name: sonic-client-web
    environment:
      - SONIC_SERVER_HOST={{ SONIC_SERVER_HOST }}
      - SONIC_SERVER_PORT={{ SONIC_SERVER_PORT }}
    networks:
      - nginx
      - sonic
    depends_on:
      - sonic-server-gateway
    restart: unless-stopped
#   {% if SONIC_EXPOSE_PORT > 0 %}
    ports:
      - '{{ SONIC_EXPOSE_PORT }}:80'
#   {% endif %}


networks:
  sonic:
    name: sonic
  nginx:
    name: nginx
